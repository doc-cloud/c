function invocation is the core mechanism of C,

activation record store all info need by function invocation and return
calling convention is a protocol between caller and function, use between library function written by different developers

activation record:

=============================

temporary variable field,
store the temporary variables, eg: the middle result of k++,

============================

local variable field,
函数本次执行的局部变量

==========================

machine state field,
store machine status before invoking function, include current value various register and return address, etc.

=============================

actual parameter field,
store actual parameter info for function

=============================

return value field,
store return value,

==========================

=================================================
=================================================

parameters get into stack,
the order obey to calling convention

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

function invoke convention

是指当一个函数被调用时，函数的参数会被传递给被调用的函数和返回值会被返回给调用函数。函数的调用约定就是描述参数是怎么传递和由谁平衡堆栈的，当然还有返回值。

1.从右到左依次入栈：__stdcall，__cdecl，__thiscall

2.从左到右依次入栈：__pascal，__fastcall

调用堆栈清理

1.调用者清除栈。

2.被调用函数返回后清除栈。
